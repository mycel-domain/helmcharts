apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mycel-seed
spec:
  selector:
    matchLabels:
      app: mycel-seed
  serviceName: "mycel-seed"
  replicas: 1
  template:
    metadata:
      labels:
        app: mycel-seed
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mycel
        image: {{ .Values.common.image }}
        volumeMounts:
        - name: data
          mountPath: /opt/data
        - name: seed-config
          mountPath: /opt/seed/config
        - name: seed-data
          mountPath: /opt/seed/data
        ports:
          - containerPort: 26656
            name: p2p
          - containerPort: 26657
            name: rpc
        command:
          - sh
          - -ce
          - |
            if [ ! -f /opt/data/mycel/setup_completed ]; then
              {{ .Values.common.binaryName }} init seed --home /opt/data/mycel
              cp /opt/seed/config/* /opt/data/mycel/config
              cp /opt/seed/data/* /opt/data/mycel/data
              sed -i "s%laddr = \"tcp://127.0.0.1:26657\"%laddr = \"tcp://0.0.0.0:26657\"%g" /opt/data/mycel/config/config.toml
              sed -i "s/snapshot-interval = 0/snapshot-interval = $SNAPSHOT_INTERVAL/g" /opt/data/mycel/config/app.toml
              sed -i "s/snapshot-keep-recent = 0/snapshot-keep-recent = $SNAPSHOT_KEEP_RECENT/g" /opt/data/mycel/config/app.toml
            fi
            touch /opt/data/mycel/setup_completed
            {{ .Values.common.binaryName }} start --home /opt/data/mycel
        env:
          - name: SNAPSHOT_INTERVAL
            value: {{ .Values.common.snapshotInterval | quote }}
          - name: SNAPSHOT_KEEP_RECENT
            value: {{ .Values.common.snapshotKeepRecent | quote }}

      volumes:
        - name: seed-config
          configMap:
            name: seed-config
        - name: seed-data
          configMap:
            name: seed-data

  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.seed.volumeSize }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mycel-node
spec:
  selector:
    matchLabels:
      app: mycel-node
  serviceName: "mycel-node"
  replicas: {{ .Values.node.replicas }}
  template:
    metadata:
      labels:
        app: mycel-node
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mycel
        image: {{ .Values.common.image }}
        volumeMounts:
        - name: data
          mountPath: /opt/data
        ports:
          - containerPort: 1317
            name: api
          - containerPort: 8080
            name: rosetta
          - containerPort: 9090
            name: grpc
          - containerPort: 26656
            name: p2p
          - containerPort: 26657
            name: rpc
          - containerPort: 9091
            name: grpc-web
        command:
          - sh
          - -c
          - |
            myceld start --home /opt/data/mycel

      initContainers:
      - name: init-node
        image: {{ .Values.common.image }}
        volumeMounts:
        - name: data
          mountPath: /opt/data
        - name: seed-config
          mountPath: /opt/seed/config
        - name: node-config
          mountPath: /opt/node/config
        resources:
          limits:
            cpu: 500m
            ephemeral-storage: 10Gi
            memory: 2Gi
          requests:
            cpu: 500m
            ephemeral-storage: 10Gi
            memory: 2Gi
        command:
          - bash
          - -cex
          - |
            if [ -f /opt/data/mycel/setup_completed ]; then
              exit 0;
            fi
            apt install -y jq
            myceld init node --home /opt/data/mycel --overwrite
            myceld tendermint unsafe-reset-all

            cat /opt/seed/config/genesis.json > /opt/data/mycel/config/genesis.json
            base64 -d /opt/node/config/app.toml > /opt/data/mycel/config/app.toml

            SEED_RPC=mycel-seed:26657
            SEED_NODE_ID=$(curl $SEED_RPC/status | jq -r '.result.node_info.id')

            sed -i "s/persistent_peers = \"\"/persistent_peers = \"${SEED_NODE_ID}@mycel-seed:26656\"/g" /opt/data/mycel/config/config.toml
            sed -i "s%laddr = \"tcp://127.0.0.1:26657\"%laddr = \"tcp://0.0.0.0:26657\"%g" /opt/data/mycel/config/config.toml

            LATEST_HEIGHT=$(curl -s $SEED_RPC/block | jq -r .result.block.header.height)
            BLOCK_HEIGHT=$((LATEST_HEIGHT - SNAPSHOT_INTERVAL))
            TRUST_HASH=$(curl -s "$SEED_RPC/block?height=$BLOCK_HEIGHT" | jq -r .result.block_id.hash)
            echo $LATEST_HEIGHT $BLOCK_HEIGHT $TRUST_HASH

            sed -i.bak -E "s|^(enable[[:space:]]+=[[:space:]]+).*$|\1true| ; \
            s|^(rpc_servers[[:space:]]+=[[:space:]]+).*$|\1\"$SEED_RPC,$SEED_RPC\"| ; \
            s|^(trust_height[[:space:]]+=[[:space:]]+).*$|\1$BLOCK_HEIGHT| ; \
            s|^(trust_hash[[:space:]]+=[[:space:]]+).*$|\1\"$TRUST_HASH\"| ; \
            s|^(seeds[[:space:]]+=[[:space:]]+).*$|\1\"\"|"  /opt/data/mycel/config/config.toml

            touch /opt/data/mycel/setup_completed

        env:
          - name: SNAPSHOT_INTERVAL
            value: {{ .Values.common.snapshotInterval | quote }}

      volumes:
        - name: seed-config
          configMap:
            name: seed-config
        - name: node-config
          configMap:
            name: node-config

  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.node.volumeSize }}

